{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketCap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","alert","filteredCoins","filter","coin","toLowerCase","includes","type","onChange","e","target","value","placeholder","map","current_price","market_cap","total_volume","price_change_percentage_24h","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAmCeA,G,MA9BF,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC/D,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAE9B,sBAAKK,UAAU,YAAf,UACE,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOM,oBACnCL,IACCA,EAAc,EACZ,oBAAGE,UAAU,mBAAb,UACEF,EAAYM,QAAQ,GADtB,OAGA,oBAAGJ,UAAU,qBAAb,UACEF,EAAYM,QAAQ,GADtB,QAIJ,oBAAGJ,UAAU,iBAAb,uBACaD,EAAUI,8B,uBC8BlBE,MApDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WAERC,IAAMC,IAAN,+GACCC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SACZC,OAAM,SAACC,GAAD,OAAWC,MAAM,yBAAD,OAAqBD,SAE7C,CAACX,IAEJ,IAIMa,EAAgBb,EAAMc,QAAO,SAAAC,GAAI,OACrCA,EAAK7B,KAAK8B,cAAcC,SAASf,EAAOc,kBAGxC,OACE,sBAAKvB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,+BACE,uBACEA,UAAU,aACVyB,KAAK,OACLC,SAhBS,SAAAC,GACnBjB,EAAUiB,EAAEC,OAAOC,QAgBTC,YAAY,gBAIjBV,EAAcW,KAAI,SAAAT,GACjB,OACE,cAAC,EAAD,CAEE7B,KAAM6B,EAAK7B,KACXG,MAAO0B,EAAKU,cACZrC,OAAQ2B,EAAK3B,OACbI,UAAWuB,EAAKW,WAChBpC,OAAQyB,EAAKY,aACbxC,MAAO4B,EAAK5B,MACZI,YAAawB,EAAKa,6BAPbb,EAAKc,WC9BTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b4cf539f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Coin.css'\r\n\r\n//todo: add header col\r\n\r\nconst Coin = ({ name, image, symbol, price, volume, priceChange, marketCap }) => {\r\n  return (\r\n    <div className='coin-container'>\r\n      <div className=\"coin-row\">\r\n        <div className=\"coin\">\r\n          <img src={image} alt=\"crypto\"/>\r\n          <h1>{name}</h1>\r\n          <p className=\"coin-symbol\">{symbol}</p>\r\n        </div>\r\n        <div className=\"coin-data\">\r\n          <p className=\"coin-price\">${price}</p>\r\n          <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n          {priceChange && (\r\n            priceChange < 0 ? (\r\n              <p className=\"coin-percent red\">{\r\n                priceChange.toFixed(2)}%</p>\r\n              ) : (\r\n              <p className=\"coin-percent green\">{\r\n                priceChange.toFixed(2)}%</p>\r\n            )\r\n          )}\r\n          <p className=\"coin-marketcap\">\r\n            Mkt Cap: ${marketCap.toLocaleString()}\r\n          </p>\r\n        </div>\r\n      </div>    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coin\r\n","import React, {useState, useEffect} from 'react'\nimport Coin from './Coin'\nimport axios from 'axios'\nimport './App.css';\n\nfunction App() {\n  const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    //axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false`)\n    axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&page=1&sparkline=false`)\n    .then(res => {\n      setCoins(res.data)\n    }).catch((error) => alert(`API get failed â€” ${error}`))\n    //console.log(coins)\n  }, [coins])\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin => \n    coin.name.toLowerCase().includes(search.toLowerCase())\n    )\n\n    return (\n      <div className='coin-app'>\n        <div className='coin-search'>\n          <h1 className='coin-text'>Search a currency</h1>\n          <form>\n            <input\n              className='coin-input'\n              type='text'\n              onChange={handleChange}\n              placeholder='Search'\n            />\n          </form>\n        </div>\n        {filteredCoins.map(coin => {\n          return (\n            <Coin\n              key={coin.id}\n              name={coin.name}\n              price={coin.current_price}\n              symbol={coin.symbol}\n              marketCap={coin.market_cap}\n              volume={coin.total_volume}\n              image={coin.image}\n              priceChange={coin.price_change_percentage_24h}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}